name: "CONVERSSIONAL AI BUS BOOKING SYSTEM"
on:
  push:
    branches: ["main"]
env:
  GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
  GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
  LANGCHAIN_API_KEY: ${{ secrets.LANGCHAIN_API_KEY }}
  LANGCHAIN_TRACING_V2: true
  LANGCHAIN_ENDPOINT: "https://api.smith.langchain.com"
  DATABASE_USER: ${{secrets.DATABASE_USER}}
  DATABASE_NAME: ${{secrets.DATABASE_NAME}}
  DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
  DATABASE_HOST: ${{secrets.DATABASE_HOST}}
  DATABASE_PORT: ${{secrets.DATABASE_PORT}}
  JWT_AUTH_SECRET_KEY: ${{secrets.JWT_AUTH_SECRET_KEY}}
  ALGORITHM: "HS256"
  IMAGE_TAG: "latest"
  PORT: 12000

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Free disk space
        run: |

          sudo rm -rf \
            /usr/share/dotnet /usr/local/lib/android /opt/ghc \
            /usr/local/share/powershell /usr/share/swift /usr/local/.ghcup \
            /usr/lib/jvm || true
          echo "some directories deleted"
          sudo apt install aptitude -y >/dev/null 2>&1
          sudo aptitude purge aria2 ansible azure-cli shellcheck rpm xorriso zsync \
            esl-erlang firefox gfortran-8 gfortran-9 google-chrome-stable \
            google-cloud-sdk imagemagick \
            libmagickcore-dev libmagickwand-dev libmagic-dev ant ant-optional kubectl \
            mercurial apt-transport-https mono-complete libmysqlclient \
            unixodbc-dev yarn chrpath libssl-dev libxft-dev \
            libfreetype6 libfreetype6-dev libfontconfig1 libfontconfig1-dev \
            snmp pollinate libpq-dev postgresql-client powershell ruby-full \
            sphinxsearch subversion mongodb-org azure-cli microsoft-edge-stable \
            -y -f >/dev/null 2>&1
          sudo aptitude purge google-cloud-sdk -f -y >/dev/null 2>&1
          sudo aptitude purge microsoft-edge-stable -f -y >/dev/null 2>&1 || true
          sudo apt purge microsoft-edge-stable -f -y >/dev/null 2>&1 || true
          sudo aptitude purge '~n ^mysql' -f -y >/dev/null 2>&1
          sudo aptitude purge '~n ^php' -f -y >/dev/null 2>&1
          sudo aptitude purge '~n ^dotnet' -f -y >/dev/null 2>&1
          sudo apt-get autoremove -y >/dev/null 2>&1
          sudo apt-get autoclean -y >/dev/null 2>&1
          echo "some packages purged"
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up docker
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        run: |
          docker compose -f docker-compose-bbs-python-be.yml build
          docker compose -f docker-compose-bbs-python-be.yml push

      - name: SCP to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST_IP }}
          username: ${{ secrets.HOST_USERNAME }}
          key: ${{ secrets.HOST_SSH_KEY }}
          source: "docker-compose-bbs-python-be.yml,set_env.sh"
          target: "~/bbs-python-compose/"

      - name: SSH to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_IP }}
          username: ${{ secrets.HOST_USERNAME }}
          key: ${{ secrets.HOST_SSH_KEY }}
          envs: GOOGLE_API_KEY, GROQ_API_KEY, LANGCHAIN_API_KEY, LANGCHAIN_TRACING_V2, LANGCHAIN_ENDPOINT, DATABASE_USER, DATABASE_NAME, DATABASE_PASSWORD, DATABASE_HOST, DATABASE_PORT, JWT_AUTH_SECRET_KEY, ALGORITHM, IMAGE_TAG, PORT
          script: |
            cd ~/bbs-python-compose
            sudo touch .env
            sudo echo "GOOGLE_API_KEY=${{secrets.GOOGLE_API_KEY}}" > .env
            sudo echo "GROQ_API_KEY=${{secrets.GROQ_API_KEY}}" >> .env
            sudo echo "LANGCHAIN_API_KEY=${{secrets.LANGCHAIN_API_KEY}}" >> .env
            sudo echo "LANGCHAIN_TRACING_V2=true" >> .env
            sudo echo "LANGCHAIN_ENDPOINT=https://api.smith.langchain.com" >> .env
            sudo echo "DATABASE_USER=${{secrets.DATABASE_USER}}" >> .env
            sudo echo "DATABASE_NAME=${{secrets.DATABASE_NAME}}" >> .env
            sudo echo "DATABASE_PASSWORD=${{secrets.DATABASE_PASSWORD}}" >> .env
            sudo echo "DATABASE_HOST=${{secrets.DATABASE_HOST}}" >> .env
            sudo echo "DATABASE_PORT=5432" >> .env
            sudo echo "JWT_AUTH_SECRET_KEY=${{secrets.JWT_AUTH_SECRET_KEY}}" >> .env
            sudo echo "ALGORITHM=HS256" >> .env
            sudo echo "IMAGE_TAG=latest" >> .env
            sudo echo "PORT=12000" >> .env
            sudo docker compose -f docker-compose-bbs-python-be.yml down --volumes
            sudo docker compose -f docker-compose-bbs-python-be.yml pull
            sudo docker compose -f docker-compose-bbs-python-be.yml up -d
